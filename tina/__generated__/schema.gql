# DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
"""References another document, used as a foreign key"""
scalar Reference

""""""
scalar JSON

type SystemInfo {
  filename: String!
  title: String
  basename: String!
  breadcrumbs(excludeExtension: Boolean): [String!]!
  path: String!
  relativePath: String!
  extension: String!
  template: String!
  collection: Collection!
}

type Folder {
  name: String!
  path: String!
}

type PageInfo {
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  startCursor: String!
  endCursor: String!
}

""""""
interface Node {
  id: ID!
}

""""""
interface Document {
  id: ID!
  _sys: SystemInfo
  _values: JSON!
}

"""A relay-compliant pagination connection"""
interface Connection {
  totalCount: Float!
  pageInfo: PageInfo!
}

type Query {
  getOptimizedQuery(queryString: String!): String
  collection(collection: String): Collection!
  collections: [Collection!]!
  node(id: String): Node!
  document(collection: String, relativePath: String): DocumentNode!
  global(relativePath: String): Global!
  globalConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: GlobalFilter): GlobalConnection!
  page(relativePath: String): Page!
  pageConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: PageFilter): PageConnection!
}

input DocumentFilter {
  global: GlobalFilter
  page: PageFilter
}

type DocumentConnectionEdges {
  cursor: String!
  node: DocumentNode
}

type DocumentConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [DocumentConnectionEdges]
}

type Collection {
  name: String!
  slug: String!
  label: String
  path: String!
  format: String
  matches: String
  templates: [JSON]
  fields: [JSON]
  documents(before: String, after: String, first: Float, last: Float, sort: String, filter: DocumentFilter, folder: String): DocumentConnection!
}

union DocumentNode = Global | Page | Folder

type GlobalHeaderNavSubnav {
  href: String!
  label: JSON!
}

type GlobalHeaderNav {
  href: String!
  label: JSON!
  subnav: [GlobalHeaderNavSubnav]
}

type GlobalHeader {
  name: String
  color: String
  nav: [GlobalHeaderNav]
}

type GlobalFooterSectionsLinksImage {
  src: String
}

type GlobalFooterSectionsLinks {
  link: String!
  size: String
  image: GlobalFooterSectionsLinksImage
  icon: String
}

type GlobalFooterSections {
  title: String
  content: JSON
  links: [GlobalFooterSectionsLinks]
}

type GlobalFooter {
  sections: [GlobalFooterSections]
}

type GlobalTheme {
  color: String
}

type Global implements Node & Document {
  header: GlobalHeader
  footer: GlobalFooter
  theme: GlobalTheme
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input StringFilter {
  startsWith: String
  eq: String
  exists: Boolean
  in: [String]
}

input RichTextFilter {
  startsWith: String
  eq: String
  exists: Boolean
}

input GlobalHeaderNavSubnavFilter {
  href: StringFilter
  label: RichTextFilter
}

input GlobalHeaderNavFilter {
  href: StringFilter
  label: RichTextFilter
  subnav: GlobalHeaderNavSubnavFilter
}

input GlobalHeaderFilter {
  name: StringFilter
  color: StringFilter
  nav: GlobalHeaderNavFilter
}

input GlobalFooterSectionsContentSubscriptFilter {
  value: StringFilter
}

input GlobalFooterSectionsContentSuperscriptFilter {
  value: StringFilter
}

input GlobalFooterSectionsContentAnchorFilter {
  value: StringFilter
}

input ImageFilter {
  startsWith: String
  eq: String
  exists: Boolean
  in: [String]
}

input BooleanFilter {
  eq: Boolean
  exists: Boolean
}

input PageBlocksHeroHeadlineImageCaptionSubscriptFilter {
  value: StringFilter
}

input PageBlocksHeroHeadlineImageCaptionSuperscriptFilter {
  value: StringFilter
}

input PageBlocksHeroHeadlineImageCaptionAnchorFilter {
  value: StringFilter
}

input GlobalFooterSectionsContentImageCaptionFilter {
  Subscript: PageBlocksHeroHeadlineImageCaptionSubscriptFilter
  Superscript: PageBlocksHeroHeadlineImageCaptionSuperscriptFilter
  Anchor: PageBlocksHeroHeadlineImageCaptionAnchorFilter
}

input NumberFilter {
  lt: Float
  lte: Float
  gte: Float
  gt: Float
  eq: Float
  exists: Boolean
  in: [Float]
}

input GlobalFooterSectionsContentImageFilter {
  image: ImageFilter
  showCaption: BooleanFilter
  caption: GlobalFooterSectionsContentImageCaptionFilter
  hyperlink: StringFilter
  width: NumberFilter
  height: NumberFilter
  float: StringFilter
}

input GlobalFooterSectionsContentFilter {
  Subscript: GlobalFooterSectionsContentSubscriptFilter
  Superscript: GlobalFooterSectionsContentSuperscriptFilter
  Anchor: GlobalFooterSectionsContentAnchorFilter
  Image: GlobalFooterSectionsContentImageFilter
}

input GlobalFooterSectionsLinksImageFilter {
  src: ImageFilter
}

input GlobalFooterSectionsLinksFilter {
  link: StringFilter
  size: StringFilter
  image: GlobalFooterSectionsLinksImageFilter
  icon: StringFilter
}

input GlobalFooterSectionsFilter {
  title: StringFilter
  content: GlobalFooterSectionsContentFilter
  links: GlobalFooterSectionsLinksFilter
}

input GlobalFooterFilter {
  sections: GlobalFooterSectionsFilter
}

input GlobalThemeFilter {
  color: StringFilter
}

input GlobalFilter {
  header: GlobalHeaderFilter
  footer: GlobalFooterFilter
  theme: GlobalThemeFilter
}

type GlobalConnectionEdges {
  cursor: String!
  node: Global
}

type GlobalConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [GlobalConnectionEdges]
}

type PageBlocksHeroBg_image {
  src: String
  alt: String
}

type PageBlocksHeroBg_video {
  src: String
}

type PageBlocksHeroActions {
  label: String
  link: String
  icon: String
}

type PageBlocksHero {
  bg_image: PageBlocksHeroBg_image
  bg_video: PageBlocksHeroBg_video
  headline: JSON
  actions: [PageBlocksHeroActions]
}

type PageBlocksFeaturesItemsActions {
  label: String
  link: String
  icon: String
}

type PageBlocksFeaturesItems {
  title: String
  text: JSON
  actions: [PageBlocksFeaturesItemsActions]
}

type PageBlocksFeatures {
  items: [PageBlocksFeaturesItems]
  color: String
}

type PageBlocksContent {
  color: String
  top_padding: String
  bottom_padding: String
  body: JSON
}

type PageBlocksTableColumn_headers {
  body: JSON
}

type PageBlocksTableRowsColumns {
  body: JSON
}

type PageBlocksTableRows {
  columns: [PageBlocksTableRowsColumns]
  color: String
}

type PageBlocksTable {
  color: String
  full_width: Boolean
  column_headers: [PageBlocksTableColumn_headers]
  rows: [PageBlocksTableRows]
}

type PageBlocksDownload {
  color: String
  src: String
  label: String
  icon: Boolean
}

type PageBlocksIframe {
  source: String!
  style: String
  height: Float
}

union PageBlocks = PageBlocksHero | PageBlocksFeatures | PageBlocksContent | PageBlocksTable | PageBlocksDownload | PageBlocksIframe

type Page implements Node & Document {
  title: String!
  blocks: [PageBlocks]
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input PageBlocksHeroBg_imageFilter {
  src: ImageFilter
  alt: StringFilter
}

input PageBlocksHeroBg_videoFilter {
  src: ImageFilter
}

input PageBlocksHeroHeadlineSubscriptFilter {
  value: StringFilter
}

input PageBlocksHeroHeadlineSuperscriptFilter {
  value: StringFilter
}

input PageBlocksHeroHeadlineAnchorFilter {
  value: StringFilter
}

input PageBlocksFeaturesItemsTextImageCaptionSubscriptFilter {
  value: StringFilter
}

input PageBlocksFeaturesItemsTextImageCaptionSuperscriptFilter {
  value: StringFilter
}

input PageBlocksFeaturesItemsTextImageCaptionAnchorFilter {
  value: StringFilter
}

input PageBlocksHeroHeadlineImageCaptionFilter {
  Subscript: PageBlocksFeaturesItemsTextImageCaptionSubscriptFilter
  Superscript: PageBlocksFeaturesItemsTextImageCaptionSuperscriptFilter
  Anchor: PageBlocksFeaturesItemsTextImageCaptionAnchorFilter
}

input PageBlocksHeroHeadlineImageFilter {
  image: ImageFilter
  showCaption: BooleanFilter
  caption: PageBlocksHeroHeadlineImageCaptionFilter
  hyperlink: StringFilter
  width: NumberFilter
  height: NumberFilter
  float: StringFilter
}

input PageBlocksHeroHeadlineFilter {
  Subscript: PageBlocksHeroHeadlineSubscriptFilter
  Superscript: PageBlocksHeroHeadlineSuperscriptFilter
  Anchor: PageBlocksHeroHeadlineAnchorFilter
  Image: PageBlocksHeroHeadlineImageFilter
}

input PageBlocksHeroActionsFilter {
  label: StringFilter
  link: StringFilter
  icon: StringFilter
}

input PageBlocksHeroFilter {
  bg_image: PageBlocksHeroBg_imageFilter
  bg_video: PageBlocksHeroBg_videoFilter
  headline: PageBlocksHeroHeadlineFilter
  actions: PageBlocksHeroActionsFilter
}

input PageBlocksFeaturesItemsTextSubscriptFilter {
  value: StringFilter
}

input PageBlocksFeaturesItemsTextSuperscriptFilter {
  value: StringFilter
}

input PageBlocksFeaturesItemsTextAnchorFilter {
  value: StringFilter
}

input PageBlocksContentBodyImageCaptionSubscriptFilter {
  value: StringFilter
}

input PageBlocksContentBodyImageCaptionSuperscriptFilter {
  value: StringFilter
}

input PageBlocksContentBodyImageCaptionAnchorFilter {
  value: StringFilter
}

input PageBlocksFeaturesItemsTextImageCaptionFilter {
  Subscript: PageBlocksContentBodyImageCaptionSubscriptFilter
  Superscript: PageBlocksContentBodyImageCaptionSuperscriptFilter
  Anchor: PageBlocksContentBodyImageCaptionAnchorFilter
}

input PageBlocksFeaturesItemsTextImageFilter {
  image: ImageFilter
  showCaption: BooleanFilter
  caption: PageBlocksFeaturesItemsTextImageCaptionFilter
  hyperlink: StringFilter
  width: NumberFilter
  height: NumberFilter
  float: StringFilter
}

input PageBlocksFeaturesItemsTextFilter {
  Subscript: PageBlocksFeaturesItemsTextSubscriptFilter
  Superscript: PageBlocksFeaturesItemsTextSuperscriptFilter
  Anchor: PageBlocksFeaturesItemsTextAnchorFilter
  Image: PageBlocksFeaturesItemsTextImageFilter
}

input PageBlocksFeaturesItemsActionsFilter {
  label: StringFilter
  link: StringFilter
  icon: StringFilter
}

input PageBlocksFeaturesItemsFilter {
  title: StringFilter
  text: PageBlocksFeaturesItemsTextFilter
  actions: PageBlocksFeaturesItemsActionsFilter
}

input PageBlocksFeaturesFilter {
  items: PageBlocksFeaturesItemsFilter
  color: StringFilter
}

input PageBlocksContentBodySubscriptFilter {
  value: StringFilter
}

input PageBlocksContentBodySuperscriptFilter {
  value: StringFilter
}

input PageBlocksContentBodyAnchorFilter {
  value: StringFilter
}

input PageBlocksTableColumn_headersBodyImageCaptionSubscriptFilter {
  value: StringFilter
}

input PageBlocksTableColumn_headersBodyImageCaptionSuperscriptFilter {
  value: StringFilter
}

input PageBlocksTableColumn_headersBodyImageCaptionAnchorFilter {
  value: StringFilter
}

input PageBlocksContentBodyImageCaptionFilter {
  Subscript: PageBlocksTableColumn_headersBodyImageCaptionSubscriptFilter
  Superscript: PageBlocksTableColumn_headersBodyImageCaptionSuperscriptFilter
  Anchor: PageBlocksTableColumn_headersBodyImageCaptionAnchorFilter
}

input PageBlocksContentBodyImageFilter {
  image: ImageFilter
  showCaption: BooleanFilter
  caption: PageBlocksContentBodyImageCaptionFilter
  hyperlink: StringFilter
  width: NumberFilter
  height: NumberFilter
  float: StringFilter
}

input PageBlocksContentBodyFilter {
  Subscript: PageBlocksContentBodySubscriptFilter
  Superscript: PageBlocksContentBodySuperscriptFilter
  Anchor: PageBlocksContentBodyAnchorFilter
  Image: PageBlocksContentBodyImageFilter
}

input PageBlocksContentFilter {
  color: StringFilter
  top_padding: StringFilter
  bottom_padding: StringFilter
  body: PageBlocksContentBodyFilter
}

input PageBlocksTableColumn_headersBodySubscriptFilter {
  value: StringFilter
}

input PageBlocksTableColumn_headersBodySuperscriptFilter {
  value: StringFilter
}

input PageBlocksTableColumn_headersBodyAnchorFilter {
  value: StringFilter
}

input PageBlocksTableRowsColumnsBodyImageCaptionSubscriptFilter {
  value: StringFilter
}

input PageBlocksTableRowsColumnsBodyImageCaptionSuperscriptFilter {
  value: StringFilter
}

input PageBlocksTableRowsColumnsBodyImageCaptionAnchorFilter {
  value: StringFilter
}

input PageBlocksTableColumn_headersBodyImageCaptionFilter {
  Subscript: PageBlocksTableRowsColumnsBodyImageCaptionSubscriptFilter
  Superscript: PageBlocksTableRowsColumnsBodyImageCaptionSuperscriptFilter
  Anchor: PageBlocksTableRowsColumnsBodyImageCaptionAnchorFilter
}

input PageBlocksTableColumn_headersBodyImageFilter {
  image: ImageFilter
  showCaption: BooleanFilter
  caption: PageBlocksTableColumn_headersBodyImageCaptionFilter
  hyperlink: StringFilter
  width: NumberFilter
  height: NumberFilter
  float: StringFilter
}

input PageBlocksTableColumn_headersBodyFilter {
  Subscript: PageBlocksTableColumn_headersBodySubscriptFilter
  Superscript: PageBlocksTableColumn_headersBodySuperscriptFilter
  Anchor: PageBlocksTableColumn_headersBodyAnchorFilter
  Image: PageBlocksTableColumn_headersBodyImageFilter
}

input PageBlocksTableColumn_headersFilter {
  body: PageBlocksTableColumn_headersBodyFilter
}

input PageBlocksTableRowsColumnsBodySubscriptFilter {
  value: StringFilter
}

input PageBlocksTableRowsColumnsBodySuperscriptFilter {
  value: StringFilter
}

input PageBlocksTableRowsColumnsBodyAnchorFilter {
  value: StringFilter
}

input PageBlocksTableRowsColumnsBodyImageCaptionFilter {
  Subscript: PageBlocksTableRowsColumnsBodyImageCaptionSubscriptFilter
  Superscript: PageBlocksTableRowsColumnsBodyImageCaptionSuperscriptFilter
  Anchor: PageBlocksTableRowsColumnsBodyImageCaptionAnchorFilter
}

input PageBlocksTableRowsColumnsBodyImageFilter {
  image: ImageFilter
  showCaption: BooleanFilter
  caption: PageBlocksTableRowsColumnsBodyImageCaptionFilter
  hyperlink: StringFilter
  width: NumberFilter
  height: NumberFilter
  float: StringFilter
}

input PageBlocksTableRowsColumnsBodyFilter {
  Subscript: PageBlocksTableRowsColumnsBodySubscriptFilter
  Superscript: PageBlocksTableRowsColumnsBodySuperscriptFilter
  Anchor: PageBlocksTableRowsColumnsBodyAnchorFilter
  Image: PageBlocksTableRowsColumnsBodyImageFilter
}

input PageBlocksTableRowsColumnsFilter {
  body: PageBlocksTableRowsColumnsBodyFilter
}

input PageBlocksTableRowsFilter {
  columns: PageBlocksTableRowsColumnsFilter
  color: StringFilter
}

input PageBlocksTableFilter {
  color: StringFilter
  full_width: BooleanFilter
  column_headers: PageBlocksTableColumn_headersFilter
  rows: PageBlocksTableRowsFilter
}

input PageBlocksDownloadFilter {
  color: StringFilter
  src: StringFilter
  label: StringFilter
  icon: BooleanFilter
}

input PageBlocksIframeFilter {
  source: StringFilter
  style: StringFilter
  height: NumberFilter
}

input PageBlocksFilter {
  hero: PageBlocksHeroFilter
  features: PageBlocksFeaturesFilter
  content: PageBlocksContentFilter
  table: PageBlocksTableFilter
  download: PageBlocksDownloadFilter
  iframe: PageBlocksIframeFilter
}

input PageFilter {
  title: StringFilter
  blocks: PageBlocksFilter
}

type PageConnectionEdges {
  cursor: String!
  node: Page
}

type PageConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [PageConnectionEdges]
}

type Mutation {
  addPendingDocument(collection: String!, relativePath: String!, template: String): DocumentNode!
  updateDocument(collection: String, relativePath: String!, params: DocumentUpdateMutation!): DocumentNode!
  deleteDocument(collection: String, relativePath: String!): DocumentNode!
  createDocument(collection: String, relativePath: String!, params: DocumentMutation!): DocumentNode!
  updateGlobal(relativePath: String!, params: GlobalMutation!): Global!
  createGlobal(relativePath: String!, params: GlobalMutation!): Global!
  updatePage(relativePath: String!, params: PageMutation!): Page!
  createPage(relativePath: String!, params: PageMutation!): Page!
}

input DocumentUpdateMutation {
  global: GlobalMutation
  page: PageMutation
  relativePath: String
}

input DocumentMutation {
  global: GlobalMutation
  page: PageMutation
}

input GlobalHeaderNavSubnavMutation {
  href: String
  label: JSON
}

input GlobalHeaderNavMutation {
  href: String
  label: JSON
  subnav: [GlobalHeaderNavSubnavMutation]
}

input GlobalHeaderMutation {
  name: String
  color: String
  nav: [GlobalHeaderNavMutation]
}

input GlobalFooterSectionsLinksImageMutation {
  src: String
}

input GlobalFooterSectionsLinksMutation {
  link: String
  size: String
  image: GlobalFooterSectionsLinksImageMutation
  icon: String
}

input GlobalFooterSectionsMutation {
  title: String
  content: JSON
  links: [GlobalFooterSectionsLinksMutation]
}

input GlobalFooterMutation {
  sections: [GlobalFooterSectionsMutation]
}

input GlobalThemeMutation {
  color: String
}

input GlobalMutation {
  header: GlobalHeaderMutation
  footer: GlobalFooterMutation
  theme: GlobalThemeMutation
}

input PageBlocksHeroBg_imageMutation {
  src: String
  alt: String
}

input PageBlocksHeroBg_videoMutation {
  src: String
}

input PageBlocksHeroActionsMutation {
  label: String
  link: String
  icon: String
}

input PageBlocksHeroMutation {
  bg_image: PageBlocksHeroBg_imageMutation
  bg_video: PageBlocksHeroBg_videoMutation
  headline: JSON
  actions: [PageBlocksHeroActionsMutation]
}

input PageBlocksFeaturesItemsActionsMutation {
  label: String
  link: String
  icon: String
}

input PageBlocksFeaturesItemsMutation {
  title: String
  text: JSON
  actions: [PageBlocksFeaturesItemsActionsMutation]
}

input PageBlocksFeaturesMutation {
  items: [PageBlocksFeaturesItemsMutation]
  color: String
}

input PageBlocksContentMutation {
  color: String
  top_padding: String
  bottom_padding: String
  body: JSON
}

input PageBlocksTableColumn_headersMutation {
  body: JSON
}

input PageBlocksTableRowsColumnsMutation {
  body: JSON
}

input PageBlocksTableRowsMutation {
  columns: [PageBlocksTableRowsColumnsMutation]
  color: String
}

input PageBlocksTableMutation {
  color: String
  full_width: Boolean
  column_headers: [PageBlocksTableColumn_headersMutation]
  rows: [PageBlocksTableRowsMutation]
}

input PageBlocksDownloadMutation {
  color: String
  src: String
  label: String
  icon: Boolean
}

input PageBlocksIframeMutation {
  source: String
  style: String
  height: Float
}

input PageBlocksMutation {
  hero: PageBlocksHeroMutation
  features: PageBlocksFeaturesMutation
  content: PageBlocksContentMutation
  table: PageBlocksTableMutation
  download: PageBlocksDownloadMutation
  iframe: PageBlocksIframeMutation
}

input PageMutation {
  title: String
  blocks: [PageBlocksMutation]
}

schema {
  query: Query
  mutation: Mutation
}
